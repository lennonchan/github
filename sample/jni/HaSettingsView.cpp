//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : HaSettingsView.cpp
//  @ Date : 2012-11-20
//  @ Author : 
//
//


#include "HaSettingsView.h"
#include "Aabridge.h"
#include "BlenderAnimation.h"
#include "Block.h"
#include "OgreSceneNode.h"
#include "HaSettingsViewImpl.h"
#include "GameObjMaker.h"
#include "AppsViewUtil.h"

#define _HA_PLANE_UP_	"Plane_x07b"
#define _HA_PLANE_DOWN_	"Plane_x08b"
#define _HA_PLANE_NUM_	2

#define _HA_PLANE_UPANM_	"Plane_vbg01aAction.001"
#define _HA_PLANE_UPANM1_	"Plane_vbg01a2Action"
#define _HA_PLANE_UPANM2_	"Plane_vbg01aAction.002"
#define _HA_PLANE_DWONANM_	"Plane_vbg01bAction.001"
#define _HA_PLANE_DWONANM1_	"Plane_vbg01b2Action"
#define _HA_PLANE_DWONANM2_	"Plane_vbg01bAction.002"
#define _HA_ANM_NUM_	6

#define _HA_ENTER_START_	720
#define _HA_ENTER_END_		740
#define _HA_EXIT_START_		750
#define _HA_EXIT_END_		770

#define _HA_WDIALOG_ANM0_		"Plane_zw09Action"
#define _HA_WDIALOG_ANM1_		"Plane_zw09Action.001"
#define _HA_WDIALOG_ANMNUM_		2
#define _HA_DIALOG_ENTER_START_	770
#define _HA_DIALOG_ENTER_END_	790	

HaSettingsView::HaSettingsView() :AaAppsView("HaViewAnm",false),m_ppViewNodeList(NULL),
									m_pBlock(NULL),m_BlockParentRowPos(0,0,0), m_BlockParentRowScale(1,1,1),m_BlockRowPos(0,0,0),m_BlockRowScale(1,1,1),
									m_pWarningDialog(NULL),m_ppWarningDialogAnm(NULL),m_showWDialogOver(false)
{
	m_ppViewNodeList = new ViewNode*[_HA_PLANE_NUM_];
	m_ppViewNodeList[0] = new ViewNode(Aabridge::getScene(),_HA_PLANE_UP_);
	m_ppViewNodeList[1] = new ViewNode(Aabridge::getScene(),_HA_PLANE_DOWN_);
	m_ppBldAnmList = new BlenderAnimation*[_HA_ANM_NUM_];
	m_ppBldAnmList[0] = new BlenderAnimation(Aabridge::getScene(),m_ppViewNodeList[0]->getGameObj(),_HA_PLANE_UPANM_);
	m_ppBldAnmList[1] = new BlenderAnimation(Aabridge::getScene(),m_ppViewNodeList[1]->getGameObj(),_HA_PLANE_DWONANM_);
	m_ppBldAnmList[2] = new BlenderAnimation(Aabridge::getScene(),Aabridge::getScene()->getObject("Plane_vbg01a2"),_HA_PLANE_UPANM1_);
	m_ppBldAnmList[3] = new BlenderAnimation(Aabridge::getScene(),Aabridge::getScene()->getObject("Plane_vbg01b2"),_HA_PLANE_DWONANM1_);
	m_ppBldAnmList[4] = new BlenderAnimation(Aabridge::getScene(),Aabridge::getScene()->getObject("Plane_vbg01a2"),_HA_PLANE_UPANM2_);
	m_ppBldAnmList[5] = new BlenderAnimation(Aabridge::getScene(),Aabridge::getScene()->getObject("Plane_vbg01b2"),_HA_PLANE_DWONANM2_);
	m_ppBldAnmList[0]->setAnmInterface(this);
	m_ppBldAnmList[1]->setAnmInterface(this);
	m_pWarningDialog = Aabridge::getScene()->getObject("Plane_zw09");
	m_pWarningDialog->setObjectRenderPriority(90);
	m_ppWarningDialogAnm = new BlenderAnimation*[_HA_WDIALOG_ANMNUM_];
	m_ppWarningDialogAnm[0] = new BlenderAnimation(Aabridge::getScene(),m_pWarningDialog,_HA_WDIALOG_ANM0_);
	m_ppWarningDialogAnm[1] = new BlenderAnimation(Aabridge::getScene(),m_pWarningDialog,_HA_WDIALOG_ANM1_);
	m_ppWarningDialogAnm[0]->setAnmInterface(this);
}

HaSettingsView::~HaSettingsView() 
{
	ui_deleteArray(m_ppViewNodeList,_HA_PLANE_NUM_);
	ui_deleteArray(m_ppBldAnmList,_HA_ANM_NUM_);
	ui_deleteArray(m_ppWarningDialogAnm,_HA_WDIALOG_ANMNUM_);
}
static gkScalar sTime = 0;
void 
HaSettingsView::onTick(gkScalar time)
{
	if(m_showWDialogOver)
	{
		//gkPrintf("sTime == %f\n",sTime);
		if(sTime >= 3)
		{
			hideWarningDialog();
			m_showWDialogOver = false;
		}
		sTime += time;
	}else
	{
		sTime = 0;
	}
}

void 
HaSettingsView::loseViewFocus()
{

}

void 
HaSettingsView::showWarningDialog()
{
	m_pWarningDialog->setVisible(true);
	for (int i = 0;i<_HA_WDIALOG_ANMNUM_;i++)
	{
		m_ppWarningDialogAnm[i]->setFrameScope(_HA_DIALOG_ENTER_START_,_HA_DIALOG_ENTER_END_);
		m_ppWarningDialogAnm[i]->play();
	}
}

void 
HaSettingsView::hideWarningDialog()
{
	m_pWarningDialog->setVisible(false);
}

void 
HaSettingsView::showView()
{
	AppsViewUtil::getInstance()->reset();
	getParentNode()->getGameObj()->getNode()->_update(true,false);
	//setFocus(0);

	for (int i = 0;i<_HA_ANM_NUM_;i++)
	{
		m_ppBldAnmList[i]->setFrameScope(_HA_ENTER_START_,_HA_ENTER_END_);
		m_ppBldAnmList[i]->play();
	}
}

void 
HaSettingsView::hideView()
{
	//sTime = 3;
	m_pWarningDialog->setVisible(false);
	for (int i = 0;i<_HA_ANM_NUM_;i++)
	{
		m_ppBldAnmList[i]->setFrameScope(_HA_EXIT_START_,_HA_EXIT_END_);
		m_ppBldAnmList[i]->play();
	}
	AaAppsView::hideView();
}

bool 
HaSettingsView::showNodeFlag(AppUnit* pNode)
{
	return true;
}

bool 
HaSettingsView::hideNodeFlag(AppUnit* pNode)
{
	return true;
}

void 
HaSettingsView::setBlockThumb(Block* pBlock)
{
	m_pBlock = pBlock;
}

#define _THUMB_BLOCKPRT_POS_	gkVector3(12.08200,0,0)
#define _THUMB_BLOCKPRT_SCALE_	gkVector3(1,1,1)
#define _THUMB_BLOCK_POS_		gkVector3(-16.9662876,-2.6962419,0.0025894642)//gkVector3(-4.07767,-2.69624,0.002589)
#define _THUMB_BLOCK_SCALE_		gkVector3(0.5,0.5,0.5)
void 
HaSettingsView::showBlockThumb(Block* pBlock)
{
	_ASSERT_(pBlock);
	m_pBlock = pBlock;
	m_BlockParentRowPos = m_pBlock->getBlockParentPlane()->getParent()->getPosition();
	m_BlockParentRowScale = m_pBlock->getBlockParentPlane()->getParent()->getScale();
	m_BlockRowPos = m_pBlock->getBlockParentPlane()->getPosition();
	m_BlockRowScale = m_pBlock->getBlockParentPlane()->getScale();

	//m_pBlock->getBlockParentPlane()->setPosition(_THUMB_BLOCK_POS_);

	/*gkMatrix4& invmat = m_pBlock->getBlockParentPlane()->getProperties().m_transform.invMatrix;
	gkMatrix4 ori;
	gkVector3 loc = _THUMB_BLOCK_POS_;
	gkVector3 scl = m_pBlock->getBlockParentPlane()->getScale();
	gkQuaternion rot = m_pBlock->getBlockParentPlane()->getOrientation();
	ori.makeTransform(loc,scl,rot);
	gkMatrix4 transed = invmat * ori;
	if(m_pBlock->getBlockParentPlane()->hasParent())
		m_pBlock->getBlockParentPlane()->setPosition(transed.getTrans());
	else*/
	m_pBlock->getBlockParentPlane()->getParent()->setPosition(_THUMB_BLOCKPRT_POS_);
	m_pBlock->getBlockParentPlane()->getParent()->setScale(_THUMB_BLOCKPRT_SCALE_);
	m_pBlock->getBlockParentPlane()->setPosition(_THUMB_BLOCK_POS_);
	m_pBlock->getBlockParentPlane()->setScale(_THUMB_BLOCK_SCALE_);
}

void 
HaSettingsView::hideBlockThumb()
{
	_ASSERT_(m_pBlock);
	m_pBlock->getBlockParentPlane()->getParent()->setPosition(m_BlockParentRowPos);
	m_pBlock->getBlockParentPlane()->getParent()->setScale(m_BlockParentRowScale);
	m_pBlock->getBlockParentPlane()->setPosition(m_BlockRowPos);
	m_pBlock->getBlockParentPlane()->setScale(m_BlockRowScale);
	m_pBlock = NULL;
}

void 
HaSettingsView::showCandidateApps()
{
	_ASSERT_(m_pDataBase);
	int size = m_pDataBase->getAppsNum();
	AppUnit* pApp  = NULL;
	for (int i = 0;i<size;i++)
	{
		pApp = m_pDataBase->getNodeByVindex(i);
		if(pApp && m_pBlock)
		{
			int appParentBlock = pApp->getPlateName()>>_LAUNCHER_HOMEAPP_POS_BITNUM_;
			if(appParentBlock == m_pBlock->getVacantPosParentID())
			{
				pApp->getGameObj()->setVisible(true);
				pApp->getGameObj()->setSubEntityVisible(_APP_HEART_INDEX_,true);
			}
			 if(appParentBlock == 0)
				pApp->getGameObj()->setVisible(true);
		}
	}
	//m_pAaViewPort->setViewportEnable(true);
}

void 
HaSettingsView::onBlenderAnmFinish(BlenderAnimation* p,int s,int e)
{
	if(p == m_ppBldAnmList[0] && getVisible())
	{
		showCandidateApps();
		HaSettingsViewImpl::getInstance()->syncAppVector();
		vector<AppUnit*>* pAppList = HaSettingsViewImpl::getInstance()->getAppsList();
 		GameObjMaker::adjustGameObjPos(HaSettingsViewImpl::getInstance()->getAppsList(),getParentNode()->getGameObj());
		if(pAppList->size() > 0)
			setFocus(pAppList->at(0));
 		if(m_pBlock)
 			showBlockThumb(m_pBlock);
	}
	else if(p == m_ppWarningDialogAnm[0])
	{
		m_showWDialogOver = true;
		sTime = 0;
	}
}