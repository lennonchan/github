//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Focus.h
//  @ Date : 2012-11-6
//  @ Author : 
//
//


#if !defined(_FOCUSMOVEPATH_H)
#define _FOCUSMOVEPATH_H

#include "LauncherScene.h"
#include "ViewNode.h"
#include "AppUnit.h"
#include <vector>

using namespace std;

class FocusMovePath
{
public:
	static ViewNode* getNextFocusNode_HomeBlock(ViewNode** pList,ViewNode* pCurrent,const eFlyDirection direct,const int length);
	static bool isInvolved(ViewNode** pList,ViewNode* pCurrent,const int length);
	static ViewNode* isInvolved(ViewNode** pList,gkGameObject* pCurrent,const int length);

	static AppUnit* getNextFocusNode_AaBack(vector<AppUnit*>*  pvList,unsigned int focusIndex,const eFlyDirection direct,const unsigned int colNum);
	
	static ViewNode* getNodeByVIndex(ViewNode** pList,const unsigned int length,unsigned int focusIndex);
	static ViewNode* getNextFocusNode_AA(ViewNode** pList,const unsigned int length,unsigned int focusIndex,const eFlyDirection direct,const unsigned int colNum);
private:
	static ViewNode* getByIndex(ViewNode* pList[],int index,const int length);
	static int CalculateIndex( int currentSelect , eFlyDirection controlID );
	
};

#endif  //_FOCUSMOVEPATH_H
