//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : StateBarViewImpl.cpp
//  @ Date : 2012-11-20
//  @ Author : 
//
//


#include "StateBarViewImpl.h"
#include "StateBarView.h"
#include "ViewNode.h"

StateBarViewImpl::StateBarViewImpl():MessageTag("StateBar"),m_cStateFlag(0)
{
	m_pStateBarView = new StateBarView();
	setRootView(m_pStateBarView);
	gkMessageManager::getSingleton().addListener(this);
}

StateBarViewImpl::~StateBarViewImpl()
{
	ui_delete(m_pStateBarView);
}

void 
StateBarViewImpl::syncState()
{
	unsigned int i = 0,j = 0;
	int state = m_cStateFlag;
	while(i<_SBIMPL_STATENUM_-1)
	{
		if((state >> i)&1)
		{
			setState(j++,static_cast<eStatus>(i));
		}
		i++;
	}

	if(state>>i)
	{
		setState(j++,static_cast<eStatus>(i+(state>>i)-1));
	}
}

void 
StateBarViewImpl::setState(int pos,eStatus state)
{
	m_pStateBarView->setViewNodeMaterial(pos,state);
}

void 
StateBarViewImpl::handleMessage(gkMessageManager::Message* message)
{
#define _HANDLE_SUBJECT_0_	"setState"
	if(MessageTag != message->m_to)
		return;
	//gkPrintf("appunit getMessage,from = %s,to = %s,subject = %s,body = %s\n",message->m_from.c_str(),message->m_to.c_str(),message->m_subject.c_str(),message->m_body.c_str());
	if(message->m_subject == _HANDLE_SUBJECT_0_)
	{
		int iState;
		const char* buffer = message->m_body.c_str(); 
		sscanf(buffer,"%d",&iState);

#if 1
		m_cStateFlag = iState;
#else	// (0/1/2/3/4 << 8 | 0/1 (wifi Р§Эт))
		int cFlag = iState&255;
		eStatus eState = static_cast<eStatus>(iState>>8);
		if(eState == _SBIMPL_STATENUM_-1)
		{
			int otherstate = m_cStateFlag&15;
			m_cStateFlag = cFlag << eState | otherstate;
		}
		else
		{
			if(cFlag)
			{
				m_cStateFlag |= (1<<eState);
			}
			else
			{
				m_cStateFlag &= 0xF^(1<<eState);
			}
		}
#endif
		syncState();
	}
}
