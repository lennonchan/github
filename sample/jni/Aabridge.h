//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Aabridge.h
//  @ Date : 2012-11-20
//  @ Author : 
//
//


#if !defined(_AABRIDGE_H)
#define _AABRIDGE_H

#include "Util.h"
#include "gkMathUtils.h"
#include "blenderAnmInterface.h"
#include "sqliteUI5.0/CUI50DBService.h"

class RootView;
class ViewNode;
class AppUnit;
class ScrollViewImpl;
class LetterViewImpl;
class MenuViewImpl;
class AaViewImpl;
class HaSettingsViewImpl;
class RootViewImpl;
class AaResidentViewImpl;
class HaResidentViewImpl;
class SortordViewImpl;
class BlenderAnimation;
class AppsViewUtil;
class Block;
//struct tcl::AppDataInfo;
using namespace tcl;
class Aabridge:public BlenderAnmInterface
{
public:
	Aabridge();
	~Aabridge();
	static Aabridge* getInstance();
	static void setScene(gkScene* pS);
	static gkScene* getScene() ;
	void enterAaMode();
	void exitAaMode();
	bool isInAaMode();
	void tick(gkScalar time);

	eAaViews getCurrentViewType();
	void setFocusView(eAaViews view);

	bool moveFocus(eFlyDirection direct);	// 移动focus
	bool setViewNodeFocus(ViewNode*);		// 设置viewNode* 为当前focus
	ViewNode* getHitViewNode(Ogre::RaySceneQueryResult& objArray);
	
	// scrollbar interface
	bool isHitScrollBar(Ogre::RaySceneQueryResult& objArray);
	bool isHitScrollBarTrack(Ogre::RaySceneQueryResult& objArray);
	gkVector3 getScrollBarPos();


	// letter View interface
	char getHitLetter(Ogre::RaySceneQueryResult& objArray);				// return NULL or ‘#’ or ‘A’~‘Z’
	char getCurrentLetter();			// 获取当前焦点所在的字母
	void setLetterVisable(bool visable);

	// Apps Util
	void setMoveVector(gkVector3 vt,bool anm = false,bool isPixUnit = false);			// 设置aaView的移动向量
	void oneRowScroll(eFlyDirection drct,bool anm = false);				// 翻一行	
	void onePageScroll(eFlyDirection drct,bool anm = false);			// 翻一页面
	void setCurrentLetter(char ch,bool anm = false);


	// All App Sortord
	void setSortordVisible(bool v);
	bool getSortedVisible();

	bool isHitStDefault(Ogre::RaySceneQueryResult& objArray);
	bool isHitStFrequence(Ogre::RaySceneQueryResult& objArray);
	bool isHitStLetter(Ogre::RaySceneQueryResult& objArray);

	bool isFocusOnStDefault();
	bool isFocusOnStFrequence();
	bool isFocusOnHitStLetter();

	void onHitStDefault();
	void onHitStFrequence();
	void onHitStLetter();

	// All Apps Resident 常驻view 左边的tv market sort button
	bool isHitTvButton(Ogre::RaySceneQueryResult& objArray);
	bool isHitAppMarketButton(Ogre::RaySceneQueryResult& objArray);
	bool isHitSortButton(Ogre::RaySceneQueryResult& objArray);
	bool isFocusOnTvButton();
	bool isFocusOnMarket();
	bool isFocusOnSortButton();
	bool openTV();
	bool openMarket();

	// Home app settings
	bool enterHomeAppSettings(Block* pObj);
	void exitHomeAppSettings();
	bool isInHomeAppMode();
	void setPlateApp(AppUnit* pApp,bool flag);	// flag = true?addApp:cutApp
	AppUnit* isHitApp_HA();

	AppUnit* getCurrentApp();
	AppUnit* isHitApp_AA(Ogre::RaySceneQueryResult& objArray);
//	bool openApp(AppUnit*);				// 打开应用
	bool onInstalledApp(AppDataInfo& info);			// 安装完成的回调
	void onUninstalledApp(gkHashedString& pckName);	// 卸载完成的回调

protected:

	void onClickCurrentViewNode();			// !!!
	void onClickViewNode(ViewNode*);
	void setFocusImpl(RootViewImpl* pImpl);
private:
	void setParentAppPos();
	RootViewImpl* getViewByNode(ViewNode* pNode);
	virtual void onBlenderAnmFinish(BlenderAnimation* p,int s,int e);
private:
	static gkScene* m_pScene;
	static Aabridge* m_pInstance;
	
	gkGameObject* m_pPlaneUp;
	gkGameObject* m_pPlaneDown;
	BlenderAnimation** m_ppAnmList;
	//BlenderAnimation* m_pBldAnmUp;
	//BlenderAnimation* m_pBldAnmDown;
	bool m_isAllAppMode;
	bool m_isHomeAppMode;

	RootViewImpl*	m_pFocusImpl; //全部应用下focus所在的view，其在不断的切换，而真正的focus的纹理存在于rootview中
	RootViewImpl**	m_ppImplArray;  //保存所有view的指针
	ScrollViewImpl* m_pScrollBarImpl;
	LetterViewImpl*	m_pLetterImpl;
	MenuViewImpl*	m_pMenuImpl;
	AaViewImpl*		m_pAllAppImpl;
	AaResidentViewImpl* m_pAaRsdImpl;
	HaSettingsViewImpl*	m_pHaSetImpl;
	HaResidentViewImpl* m_pHaRsdImpl;
	SortordViewImpl*	m_pSortImpl;
	AppsViewUtil*		m_pViewUtil; //一个代理类，保存所有的view指针，并且包含一个指向自身的static指针
	RootViewImpl*	m_pPreFocusImpl;

	bool setParentAppPosOnce;
};

#endif  //_AABRIDGE_H
