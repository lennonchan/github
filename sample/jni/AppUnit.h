//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : AppUnit.h
//  @ Date : 2012-11-20
//  @ Author : 
//
//


#if !defined(_APPUNIT_H)
#define _APPUNIT_H

#include <gkString.h>
#include "ViewNode.h"
#include "sqliteUI5.0/CUI50DBService.h"
#include "gkMessageManager.h"
#include "gkLogger.h"
#include "OgreTextureUnitState.h"

using namespace tcl;

#define _APP_BACKGROUND_INDEX_	0
#define _APP_ICON_INDEX_		1
#define _APP_NAME_INDEX_		2
#define _APP_CROSS_INDEX_		3
#define _APP_X_INDEX_			4
#define _APP_HEART_INDEX_		5

class AppUnit :public ViewNode
{
public:
	AppUnit(AppDataInfo& info);
	AppUnit(gkScene*pScene,const gkHashedString& str);
	~AppUnit();
	void setAppDataInfo(AppDataInfo& info);
	const char* getChar();
	int getID();
	gkString getAppName();
	gkString getPackageName();
	gkString getActivityName();
	void setPackageName(const gkString& str);
	void setActivityName(const gkString& str);
	AppDataInfo getAppInfo();
	int getPlateName();
	void setPlateName(int);
	void setHeartVisible(bool v);
	int getUseFrequence();
	void plusUseNumber();
	void setTextureID(int[]);
	void setAppIconTID(int);
	void setAppNameTID(int);
	//int getTextureID();
	int getAppIconTID();
	int getAppNameTID();
	bool getDataChangeFlag();
	bool isNailApp();
private:
	AppDataInfo m_AppInfo;
	bool m_isDataChanged;	//标记是否有数据变更
public:
	struct AppTextureUnit:public gkMessageManager::GenericMessageListener
	{
		gkString MessageTag;
		AppUnit* m_pAppUnit;

		AppTextureUnit();
		void showTexture(AppUnit* pApp);
		void handleMessage(gkMessageManager::Message* message);
	//private:
		void setEntityTextureID(int entityIndex,int textureID);
	};
};

#endif  //_APPUNIT_H
