//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : AaAppsViewImpl.h
//  @ Date : 2012-11-20
//  @ Author : 
//
//


#if !defined(_AAAPPSVIEWIMPL_H)
#define _AAAPPSVIEWIMPL_H

#include "AaAppsView.h"
#include "AppUnit.h"
#include "DataBaseImpl.h"
#include "RootViewImpl.h"

class AppsViewUtil;
class AaAppsViewImpl :public RootViewImpl
{
	friend class AppsViewUtil;
public:
	AaAppsViewImpl();
	~AaAppsViewImpl();
	void setBackgroundView(AaAppsView* pBgView);
	virtual vector<AppUnit*>*  getAppsList();
	bool appSort(eSortord st);
	eSortord getSortord();
	bool update();
	virtual void onTick(gkScalar time);
	bool isInvolvedViewNode(ViewNode* pNode);

	int getAppNum();
	int getNodeVindex(ViewNode* pNode);					// 获取Node在Vector中的序列
	void onInstalledApp(AppDataInfo& info);				// 安装完成的回调
	void onUninstalledApp(gkHashedString& pckName);		// 卸载完成的回调

	virtual AaAppsView* getRootView();
	bool moveFocus(eFlyDirection direct);	// 移动focus
	bool MoveViewFocus(RootViewImpl* pPreImpl,eFlyDirection direction);
	bool setViewNodeFocus(ViewNode*);		// 设置viewNode* 为当前focus
	ViewNode* getCurrentViewNode();	
	//virtual	ViewNode* getHitViewNode();
	virtual void onClickViewNode(ViewNode*)=0;
	void onLoseFocus();
	//virtual void onHitCurrentNode() = 0;

	void handleMessage(gkMessageManager::Message* message);
protected:
	gkVector3 getParentPos();
	gkVector3 getParentRawPos();
	gkVector3 getParentScale();
	void syncTextureFromJava();
	void setMoveVector(gkVector3 gVector,bool anm = false);				// 设置AA的移动向量
private:
	DataBaseImpl* m_pDataBase;
	AaAppsView* m_AaAppsView;
	eSortord m_sortType;
	gkVector3 m_ParentRawPos;
	AppsViewUtil* m_pViewUtil;
	static AppUnit::AppTextureUnit* pAppTextureUnit;
};

#endif  //_AAAPPSVIEWIMPL_H
