//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : AaResidentViewImpl.cpp
//  @ Date : 2012-11-20
//  @ Author : 
//
//


#include "AaResidentViewImpl.h"
#include "AaResidentView.h"
#include "ViewNode.h"
#include "SortordViewImpl.h"
#include "FocusMovePath.h"

#define  _AARESIDENT_COLNUM_	2

AaResidentViewImpl::AaResidentViewImpl(SortordViewImpl* pSortImpl):m_pResidentView(NULL),m_pSortImpl(NULL),m_pThumbBlock(NULL)
{
	m_pResidentView = new AaResidentView();
	m_pSortImpl = pSortImpl;
	setRootView(m_pResidentView);
}

AaResidentViewImpl::~AaResidentViewImpl()
{
	ui_delete(m_pResidentView);
	m_pSortImpl = NULL;
}

void 
AaResidentViewImpl::setThumbBlock(Block * pBlock)
{
	m_pThumbBlock = pBlock;
}

bool 
AaResidentViewImpl::isHitTvButton(Ogre::RaySceneQueryResult& objArray)
{
	return m_pResidentView->isHitTvButton(objArray);
}

bool 
AaResidentViewImpl::isHitAppMarketButton(Ogre::RaySceneQueryResult& objArray)
{
	return m_pResidentView->isHitAppMarketButton(objArray);
}

bool 
AaResidentViewImpl::isHitSortButton(Ogre::RaySceneQueryResult& objArray)
{
	return m_pResidentView->isHitSortButton(objArray);
}

bool 
AaResidentViewImpl::isFocusOnTvButton()
{
	return m_pResidentView->isFocusOnTvButton();
}

bool 
AaResidentViewImpl::isFocusOnMarket()
{
	return m_pResidentView->isFocusOnMarket();
}

bool 
AaResidentViewImpl::isFocusOnSortButton()
{
	return m_pResidentView->isFocusOnSortButton();
}	

bool 
AaResidentViewImpl::onClickTvButton()
{
	return true;
}

bool 
AaResidentViewImpl::onClickAppMarketButton()
{
	return true;
}

bool 
AaResidentViewImpl::onClickSortButton()
{
	m_pSortImpl->setViewVisible(!m_pSortImpl->getViewVisible());
	
	return true;
}

bool 
AaResidentViewImpl::moveFocus(eFlyDirection direct)	// 移动focus
{
	ViewNode* pResult = FocusMovePath::getNextFocusNode_AA(m_pResidentView->getViewNodeList(),
		m_pResidentView->getViewNodeNum(),m_pResidentView->getFocus()->getMinIndex(),direct,_AARESIDENT_COLNUM_);
	if(pResult)
	{
		m_pResidentView->setFocus(pResult);
		return true;
	}
	return false;
	
}

bool 
AaResidentViewImpl::MoveViewFocus(RootViewImpl* pPreImpl,eFlyDirection direction)
{
	_ASSERT_(pPreImpl&&m_pResidentView);

	pPreImpl->onLoseFocus();
	switch(direction)
	{
	case LEFT:
		m_pResidentView->setFocus(1);
		break;
	case DOWN:
		m_pResidentView->setFocus(2);
		break;
	}

	return true;
}

bool 
AaResidentViewImpl::setViewNodeFocus(ViewNode* pApp)		// 设置viewNode* 为当前focus
{
	return m_pResidentView->setFocus(pApp->getMinIndex());
}

ViewNode* 
AaResidentViewImpl::getCurrentViewNode()
{
	return m_pResidentView->getFocus();
}

void 
AaResidentViewImpl::onClickViewNode(ViewNode* pNode)
{

}
void 
AaResidentViewImpl::onLoseFocus()
{

}

void
AaResidentViewImpl::onHitCurrentNode()
{

}