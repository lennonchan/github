//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : ScrollViewImpl.h
//  @ Date : 2012-11-20
//  @ Author : 
//
//


#if !defined(_SCROLLVIEWIMPL_H)
#define _SCROLLVIEWIMPL_H

#include "ScrollbarView.h"
#include "RootViewImpl.h"

class AppsViewUtil;
class ScrollViewImpl :public RootViewImpl
{
	friend class AppsViewUtil;
public:
	ScrollViewImpl();
	~ScrollViewImpl();
	static ScrollViewImpl* getInstance();
	bool isHitScrollBar(Ogre::RaySceneQueryResult&);
	bool isHitScrollBarTrack(Ogre::RaySceneQueryResult&);
	bool setScrBMoveVectorOnY(int yVector,bool isPixVector = false);		// 设置滚动条在Y轴上的移动向量
	bool setScrBMoveVector(gkVector3 gVector,bool isPixVector = false);		// 设置滚动条的移动向量
	bool setScrBPos(gkVector3 gkPos);			// 设置scroll bar的位置
	gkVector3 getScrBYPos();					// 获取scroll bar的位置
	//void setSBRawPosition(gkVector3 pos);		// 设置滚动条在最顶端的位置
	void setViewVisible(bool vsb = true);
	void setShowScrollBarFlag(bool bFlag);		// 设置是否需要显示滚动条
	void setScrollBarScale(gkVector3 gScale);
	void setScrollBarPosition(gkVector3 gPosition);
	void syncScrollBar();
	void setScrollBarToCurPos();
	void setScrollBarToRowPos();
	//bool setScrBarPosition(float f);		// 范围 0~1
	//float getScrBarPosition();
	float getScrTrackLength();
	
	//tScrollData getScrBarData();

	bool moveFocus(eFlyDirection direct);	// 移动focus
	bool MoveViewFocus(RootViewImpl* pPreImpl,eFlyDirection direction);
	bool setViewNodeFocus(ViewNode* pNode);		// 设置viewNode* 为当前focus
	ViewNode* getCurrentViewNode();	
	void onLoseFocus();
protected:
	void setScrBarData(tScrollData* pdata);
	//gkVector3 RatioToPos(float ratio);
	//float PosToRatio(gkVector3 pos);
private:
	bool		m_ShowScrollBar;	// 标记是否要显示滚动条；如果类容一屏可以显示完则不需要滚动条
	//tScrollData   m_ScrData;
	ScrollbarView* m_pScrollView;
	AppsViewUtil*	m_pViewUtil;
	float m_ScrollbarLength;
	int m_SbMinPos;
	int m_SbMaxPos;
	gkVector3 m_ScrollScale;
	gkVector3 m_ScrollCurrentPos;
	gkVector3 m_ScrollRowPos;
	static ScrollViewImpl* m_pInstance;
};

#endif  //_SCROLLVIEWIMPL_H
