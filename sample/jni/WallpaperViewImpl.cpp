//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : WallpaperViewImpl.cpp
//  @ Date : 2012-11-20
//  @ Author : 
//
//


#include "WallpaperViewImpl.h"
#include "WallpaperView.h"
#include "ViewNode.h"
#include "FocusMovePath.h"
#include "OgreEntity.h"
#include "OgreSubEntity.h"
#include "gkEntity.h"

#define _WPIMPL_SETBUTTON_INDEX_ 13
#define _WALLPAPER_COLNUM_ 5
#define _WP_BACKROUND_	"bg_a01"

#define _WP_BG_MATERIAL0	"Plane_wbga01b"
#define _WP_BG_MATERIAL1	"Plane_wbga02b"
#define _WP_BG_MATERIAL2	"Plane_wbga03b"
#define _WP_BG_MATERIAL3	"Plane_wbga04b"
#define _WP_BG_MATERIAL4	"Plane_wbga05b"

WallpaperViewImpl::WallpaperViewImpl():m_pWallpaperView(NULL),m_pBgPass(NULL)
{
	m_pWallpaperView = new WallpaperView();
	gkGameObject* pBackGround = Aabridge::getScene()->getObject(_WP_BACKROUND_);

	m_pBgPass = pBackGround->getCurrentOgrePass(0);
	for (int i = 0;i<_WP_BG_MATERIALNUM_;i++)
	{
		mBgMaterialArray[i] = ((gkEntity*)pBackGround)->getGLTexture(0,i)->getGLID();
	}

	setRootView(m_pWallpaperView);
}

WallpaperViewImpl::~WallpaperViewImpl()
{
	ui_delete(m_pWallpaperView);
}

bool 
WallpaperViewImpl::isHitWpSetButton(Ogre::RaySceneQueryResult& hitList)
{
	return m_pWallpaperView->isHitWpSetButton(hitList);
}

bool 
WallpaperViewImpl::setViewNodeFocus(ViewNode* pApp)		// 设置viewNode* 为当前focus
{
	return m_pWallpaperView->setFocus(pApp);
}

ViewNode* 
WallpaperViewImpl::getCurrentViewNode()
{
	return m_pWallpaperView->getCurrentViewNode();
}

bool 
WallpaperViewImpl::moveFocus(eFlyDirection direct)	// 移动focus
{
	if(direct == UP)
		return m_pWallpaperView->setFocus(m_pWallpaperView->getWallpaperNodeIndex());
	ViewNode * pApp = FocusMovePath::getNextFocusNode_AA(m_pWallpaperView->getViewNodeList(),
		m_pWallpaperView->getViewNodeNum(),m_pWallpaperView->getFocus()->getMinIndex(),direct,_WALLPAPER_COLNUM_);
	if(!pApp)
	{
		return false;
	}
	return m_pWallpaperView->setFocus(pApp);
}

int 
WallpaperViewImpl::getWallPaperThumbIndex()
{
	return m_pWallpaperView->getWallpaperNodeIndex();
}

void 
WallpaperViewImpl::setWallpaper(int index)
{
	_ASSERT_(index>=0&&index<5);
	((gkEntity*)Aabridge::getScene()->getObject(_WP_BACKROUND_))->setGLTextureID(0,0,mBgMaterialArray[_WP_BG_MATERIALNUM_ - index - 1]);
}

bool 
WallpaperViewImpl::isFocusOnWpSetButton()
{
	return m_pWallpaperView->getViewNodeList()[_WPIMPL_SETBUTTON_INDEX_] == m_pWallpaperView->getFocus();
}
