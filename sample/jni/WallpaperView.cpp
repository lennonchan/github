//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : WallpaperView.cpp
//  @ Date : 2012-11-20
//  @ Author : 
//
//


#include "WallpaperView.h"
#include "Aabridge.h"
#include "ViewNode.h"

#define _WALLPAPER_PLANE0_	"Plane_xwab1"
#define _WALLPAPER_PLANE1_	"Plane_wbga01"
#define _WALLPAPER_PLANE2_	"Plane_wbga02"
#define _WALLPAPER_PLANE3_	"Plane_wbga03"
#define _WALLPAPER_PLANE4_	"Plane_wbga04"
#define _WALLPAPER_PLANE5_	"Plane_wbga05"
#define _WALLPAPER_PLANE6_	"Plane_wbga06"
#define _WALLPAPER_PLANE7_	"Plane_wab1"
#define _WALLPAPER_PLANE8_	"Plane_xwbga01"
#define _WALLPAPER_PLANE9_	"Plane_xwbga02"
#define _WALLPAPER_PLANE10_	"Plane_xwbga03"
#define _WALLPAPER_PLANE11_	"Plane_xwbga04"
#define _WALLPAPER_PLANE12_	"Plane_xwbga05"
#define _WALLPAPER_PLANE13_	"Plane_waa1"
#define _WALLPAPER_PLANENUM_	13

#define _WALLPAPER_ANM0_	"Plane_xwab1Action"
#define _WALLPAPER_ANM1_	"Plane_wab1Action"
#define _WALLPAPER_ANM1_1_	"Plane_wab1Action.001"
#define _WALLPAPER_ANM2_	"Plane_xwbga01Action"
#define _WALLPAPER_ANM2_1_	"Plane_wbga01Action"
#define _WALLPAPER_ANM3_	"Plane_xwbga02Action"
#define _WALLPAPER_ANM3_1_	"Plane_wbga02Action"
#define _WALLPAPER_ANM4_	"Plane_xwbga03Action"
#define _WALLPAPER_ANM4_1_	"Plane_wbga03Action"
#define _WALLPAPER_ANM5_	"Plane_xwbga04Action"
#define _WALLPAPER_ANM5_1_	"Plane_wbga04Action"
#define _WALLPAPER_ANM6_	"Plane_xwbga05Action"
#define _WALLPAPER_ANM6_1_	"Plane_wbga05Action"
// #define _WALLPAPER_ANM7_	"Plane_waa1Action"
// #define _WALLPAPER_ANM8_	"Plane_waa2Action"
// #define _WALLPAPER_ANM9_	"Plane_waa1Action.001"
#define _WALLPAPER_ANMNUM_	13
#define _WALLPAPER_MATERIAL_ANMNUM_	5

#define _WALLPAPER_ANM_SHOW_START_	900
#define _WALLPAPER_ANM_SHOW_END_	940
#define _WALLPAPER_ANM_HIDE_START_	940
#define _WALLPAPER_ANM_HIDE_END_	960

WallpaperView::WallpaperView():RootView(false),m_pWallpaperNode(NULL) 
{
	gkScene* pScene = Aabridge::getScene();
	m_ppViewNodeList = new ViewNode*[_WALLPAPER_PLANENUM_];
	m_ppViewNodeList[0] = new ViewNode(pScene,_WALLPAPER_PLANE0_);
	m_ppViewNodeList[1] = (new ViewNode(pScene,_WALLPAPER_PLANE1_))->setIndex(0,0);
	m_ppViewNodeList[2] = (new ViewNode(pScene,_WALLPAPER_PLANE2_))->setIndex(1,1);
	m_ppViewNodeList[3] = (new ViewNode(pScene,_WALLPAPER_PLANE3_))->setIndex(2,2);
	m_ppViewNodeList[4] = (new ViewNode(pScene,_WALLPAPER_PLANE4_))->setIndex(3,3);
	m_ppViewNodeList[5] = (new ViewNode(pScene,_WALLPAPER_PLANE5_))->setIndex(4,4);
	m_ppViewNodeList[6] = new ViewNode(pScene,_WALLPAPER_PLANE6_);
	m_ppViewNodeList[7] = new ViewNode(pScene,_WALLPAPER_PLANE7_);
	m_ppViewNodeList[8] = new ViewNode(pScene,_WALLPAPER_PLANE8_);
	m_ppViewNodeList[9] = new ViewNode(pScene,_WALLPAPER_PLANE9_);
	m_ppViewNodeList[10] = new ViewNode(pScene,_WALLPAPER_PLANE10_);
	m_ppViewNodeList[11] = new ViewNode(pScene,_WALLPAPER_PLANE11_);
	m_ppViewNodeList[12] = new ViewNode(pScene,_WALLPAPER_PLANE12_);
	//m_ppViewNodeList[13] = (new ViewNode(pScene,_WALLPAPER_PLANE13_))->setIndex(5,9);
	setViewNodeList(m_ppViewNodeList);
	setViewNodeNum(_WALLPAPER_PLANENUM_);

	m_ppAnmList = new BlenderAnimation*[_WALLPAPER_ANMNUM_];
	m_ppAnmList[0] = new BlenderAnimation(pScene,m_ppViewNodeList[0]->getGameObj(),_WALLPAPER_ANM0_);
	m_ppAnmList[1] = new BlenderAnimation(pScene,m_ppViewNodeList[7]->getGameObj(),_WALLPAPER_ANM1_);
	m_ppAnmList[2] = new BlenderAnimation(pScene,m_ppViewNodeList[8]->getGameObj(),_WALLPAPER_ANM2_);
	m_ppAnmList[3] = new BlenderAnimation(pScene,m_ppViewNodeList[9]->getGameObj(),_WALLPAPER_ANM3_);
	m_ppAnmList[4] = new BlenderAnimation(pScene,m_ppViewNodeList[10]->getGameObj(),_WALLPAPER_ANM4_);
	m_ppAnmList[5] = new BlenderAnimation(pScene,m_ppViewNodeList[11]->getGameObj(),_WALLPAPER_ANM5_);
	m_ppAnmList[6] = new BlenderAnimation(pScene,m_ppViewNodeList[12]->getGameObj(),_WALLPAPER_ANM6_);
// 	m_ppAnmList[7] = new BlenderAnimation(pScene,m_ppViewNodeList[13]->getGameObj(),_WALLPAPER_ANM7_);
// 	m_ppAnmList[8] = new BlenderAnimation(pScene,m_ppViewNodeList[13]->getGameObj(),_WALLPAPER_ANM8_);
// 	m_ppAnmList[9] = new BlenderAnimation(pScene,m_ppViewNodeList[13]->getGameObj(),_WALLPAPER_ANM9_);
	m_ppAnmList[7] = new BlenderAnimation(pScene,m_ppViewNodeList[0]->getGameObj(),_WALLPAPER_ANM1_1_);
	m_ppAnmList[8] = new BlenderAnimation(pScene,m_ppViewNodeList[1]->getGameObj(),_WALLPAPER_ANM2_1_);
	m_ppAnmList[9] = new BlenderAnimation(pScene,m_ppViewNodeList[2]->getGameObj(),_WALLPAPER_ANM3_1_);
	m_ppAnmList[10] = new BlenderAnimation(pScene,m_ppViewNodeList[3]->getGameObj(),_WALLPAPER_ANM4_1_);
	m_ppAnmList[11] = new BlenderAnimation(pScene,m_ppViewNodeList[4]->getGameObj(),_WALLPAPER_ANM5_1_);
	m_ppAnmList[12] = new BlenderAnimation(pScene,m_ppViewNodeList[5]->getGameObj(),_WALLPAPER_ANM6_1_);
	m_ppViewNodeList[1]->setViewNodeBldAnm(m_ppAnmList[8],_WALLPAPER_ANM_SHOW_START_,_WALLPAPER_ANM_SHOW_END_,_WALLPAPER_ANM_HIDE_START_,_WALLPAPER_ANM_HIDE_END_);
	m_ppViewNodeList[2]->setViewNodeBldAnm(m_ppAnmList[9],_WALLPAPER_ANM_SHOW_START_,_WALLPAPER_ANM_SHOW_END_,_WALLPAPER_ANM_HIDE_START_,_WALLPAPER_ANM_HIDE_END_);	
	m_ppViewNodeList[3]->setViewNodeBldAnm(m_ppAnmList[10],_WALLPAPER_ANM_SHOW_START_,_WALLPAPER_ANM_SHOW_END_,_WALLPAPER_ANM_HIDE_START_,_WALLPAPER_ANM_HIDE_END_);
	m_ppViewNodeList[4]->setViewNodeBldAnm(m_ppAnmList[11],_WALLPAPER_ANM_SHOW_START_,_WALLPAPER_ANM_SHOW_END_,_WALLPAPER_ANM_HIDE_START_,_WALLPAPER_ANM_HIDE_END_);
	m_ppViewNodeList[5]->setViewNodeBldAnm(m_ppAnmList[12],_WALLPAPER_ANM_SHOW_START_,_WALLPAPER_ANM_SHOW_END_,_WALLPAPER_ANM_HIDE_START_,_WALLPAPER_ANM_HIDE_END_);
	
	m_ppAnmList[0]->setAnmInterface(this);
	m_pWallpaperNode = m_ppViewNodeList[1];
	setFocus(0);
}

WallpaperView::~WallpaperView() 
{
	m_pWallpaperNode = NULL;
	//ui_deleteArray(m_ppViewNodeList,_WALLPAPER_PLANENUM_);
	ui_deleteArray(m_ppAnmList,_WALLPAPER_ANMNUM_);
}

bool 
WallpaperView::isHitWpSetButton(Ogre::RaySceneQueryResult& hitList)
{
	return isObjInArray(hitList,m_ppViewNodeList[13]->getGameObj());
}

ViewNode* 
WallpaperView::getCurrentViewNode()
{
	return m_pWallpaperNode;
}

int 
WallpaperView::getWallpaperNodeIndex()
{
	for (int i = 1;i<7;i++)
	{
		if(m_pWallpaperNode == m_ppViewNodeList[i])
			return i-1;
	}

	return 0;
}

bool 
WallpaperView::setFocus(ViewNode* node)
{
	for (int i = 1;i<7;i++)
	{
		if(node == m_ppViewNodeList[i])
		{
			if(m_pWallpaperNode)
				m_pWallpaperNode->hideViewNodeBldAnm();
			m_pWallpaperNode = node;
			break;
		}
	}
	if(m_pWallpaperNode == node)
	{
		m_pWallpaperNode->showViewNodeBldAnm();
		RootView::setFocusVisible(false);
		RootView::setFocus(node);
	}
	else
	{
		RootView::setFocusVisible(true);
		RootView::setFocus(node);
	}
	return true;
}

bool 
WallpaperView::setFocus(int index)
{
	RootView::setFocusVisible(false);
	return RootView::setFocus(index);
}
void 
WallpaperView::showView()
{
	for(int i = 0;i<_WALLPAPER_ANMNUM_;i++)
	{
		m_ppAnmList[i]->setFrameScope(_WALLPAPER_ANM_SHOW_START_,_WALLPAPER_ANM_SHOW_END_);
		m_ppAnmList[i]->play();
	}
	

}

void 
WallpaperView::hideView()
{
	//setFocusVisible(false);
	for(int i = 0;i<_WALLPAPER_ANMNUM_;i++)
	{
		m_ppAnmList[i]->setFrameScope(_WALLPAPER_ANM_HIDE_START_,_WALLPAPER_ANM_HIDE_END_);
		m_ppAnmList[i]->play();
	}
	RootView::setFocusVisible(false);

}

void 
WallpaperView::onBlenderAnmFinish(BlenderAnimation* p,int s,int e)
{
	if (getVisible() == true && p == m_ppAnmList[0])
	{
		for (int i = 1;i < 6;i++)
		{
			if(m_ppViewNodeList[i] == getFocus())
				continue;
			else if(getFocus() == NULL)
			{
				setFocus(m_ppViewNodeList[i]);
				continue;
			}
			m_ppViewNodeList[i]->hideViewNodeBldAnm();
		}
		RootView::setFocusVisible(false);
	}
}