//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : RootViewImpl.h
//  @ Date : 2012-11-22
//  @ Author : 
//
//


#if !defined(_ROOTVIEWIMPL_H)
#define _ROOTVIEWIMPL_H

#include "Util.h"
#include "gkMathUtils.h"

class ViewNode;
class RootView;
class RootViewImpl {
public:
	RootViewImpl();
	virtual ~RootViewImpl();
	static void onTick(gkScalar time);
	void setRootView(RootView* pView);
	virtual void setViewVisible(bool vsb = true);
	virtual bool getViewVisible();
	virtual bool moveFocus(eFlyDirection direct)= 0;	// 移动focus
	virtual bool MoveViewFocus(RootViewImpl* pPreImpl,eFlyDirection direction) = 0;
	virtual	bool setViewNodeFocus(ViewNode*){return true;};		// 设置viewNode* 为当前focus
	virtual	ViewNode* getCurrentViewNode(){return NULL;};
	virtual	ViewNode* getHitViewNode(Ogre::RaySceneQueryResult& objArray);

	virtual	void onClickViewNode(ViewNode*){};
	virtual void onLoseFocus(){};
	virtual void onHitCurrentNode(){};
	virtual RootView* getRootView();

	void setFocusViewImpl(RootViewImpl* pLeftVi = NULL,RootViewImpl* pRightVi = NULL,RootViewImpl* pUpVi = NULL,RootViewImpl* pDownVi = NULL);
	void setLeftViewImpl(RootViewImpl* pViewImpl);
	void setRightViewImpl(RootViewImpl* pViewImpl);
	void setUpViewImpl(RootViewImpl* pViewImpl);
	void setDownViewImpl(RootViewImpl* pViewImpl);

	//切换view区域
	RootViewImpl** getFocusViewImpl();
	RootViewImpl* getFocusViewImpl(eFlyDirection direct);
	RootViewImpl* getLeftViewImpl();
	RootViewImpl* getRightViewImpl();
	RootViewImpl* getUpViewImpl();
	RootViewImpl* getDownViewImpl();

protected:
	//前，后，左，右四个方向的相邻view
	RootViewImpl** m_NextFocusViewImpl;
private:
	//每个派生类的viewImp中通过setRootView（）方法将其对应的view类设置进去，
	//从而通过多态方法调用到相关的派生类view的方法
	RootView* m_pRootView;  
};

#endif  //_ROOTVIEWIMPL_H
